{"version":3,"sources":["i18n/locale-config.js","utils/shared-styles.js","components/shared/ScrollToRoute.js","utils/utils.js","components/shared/IntlComponent.js","components/shared/Google-Analytics.js","components/Cover.js","components/Product.js","components/Technology.js","components/Home.js","components/TeamMember.js","components/shared/Paragraph.js","utils/const.js","components/Join-Us.js","components/About.js","components/Whitepaper.js","components/NotFound.js","components/Navbar.js","components/Footer.js","App.js","index.js"],"names":["localeConfig","code","locale","languageCode","display","shortDisplay","file","__webpack_require__","e","then","bind","STYLES_CONST","Object","freeze","primaryColor","secondaryColor","fontColor","jobColor","letterSpacing","navHeight","footerHeight","SHARED_STYLES","wrapper","paddingTop","paddingBottom","section","width","padding","justifyContent","alignItems","position","container","height","maxWidth","margin","flexDirection","button","minWidth","borderRadius","fontSize","fontWeight","textTransform","boxShadow","&:hover","backgroundColor","&:focus","outlinedButton","color","buttonLink","textDecoration","flatButton","transition","&.active","titleText","concat","marginBottom","subTitleText","headLineText","bodyText","lineHeight","paragraph","marginTop","textAlign","&:last-child","anchor","top","left","build","buildIcon","animation","illImg","ScrollToRoute","this","props","location","state","shouldScroll","prevProps","behavior","path","pathname","setTimeout","document","getElementById","scrollIntoView","_this$props","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","withRouter","usingClasses","classes","name","loadLocaleData","_ref","asyncToGenerator","regenerator_default","mark","_callee","currentLocale","defaultLocale","config","data","wrap","_context","prev","next","find","l","res","default","sent","abrupt","stop","_x","_x2","_x3","apply","arguments","IntlComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","safeSetState","newState","isMount","setState","intl","Error","intlData","nextProps","React","ReactGA","set","page","pageview","styles","objectSpread","cover","maxHeight","background","backgroundSize","titleContainer","title","slogan","mobileIcon","alignSelf","withStyles","injectIntl","className","id","index_es","defaultMessage","Button","variant","Link","to","src","alt","Technology","technology","techDOM","getTechDOM","ArrowForward_default","techList","length","map","tech","idx","key","Paper","elevation","icon","content","techSection","list","marginLeft","marginRight","techItem","paddingLeft","paddingRight","head","body","paper","arrowIcon","transform","components_Cover","components_Product","components_Technology","TeamMember","founder","teamMember","team_member","founderDOM","getFounderDOM","teamMemberDOM","getTeamMemberDOM","founderList","photo","member","job","teamMemberSection","flexWrap","founderItem","memberList","memberItem","memberPhoto","memberName","memberJob","linkIcon","opacity","Paragraph","messages","type","msgValues","values","msg","defaultProps","CONST","githubURL","twitterURL","discordURL","contactMail","recruitURL","whitePaperURL","googleAnalyticsID","joinUsSection","target","href","rel","About","aboutUs","about_us","shared_Paragraph","components_TeamMember","Join_Us","aboutSection","aboutIll","Whitepaper","scrollHeight","window","scrollY","isBookmarkOpen","onBookmarkClick","onBookmarkTrigger","prevState","closeBookmark","getBookMarkActive","isDidMount","whatIsAgora","motivation","getBoundingClientRect","developers","gamers","connecting","alliance","ownership","freedom","community","revenue","roadmap","about","bottom","_this2","addEventListener","debounce","maxWait","_this3","removeEventListener","scrollPercentage","isBookmarkActive","bookmarkCount","activeCount","filter","Math","floor","toFixed","onClick","style","disableRipple","ArrowRight_default","zIndex","bookmarkOverlay","bookmarkContainer","bookmark","bookmarkScrollbar","scrollbar","bookmarkPaper","bookmarkLink","&:not(:last-child)","subBookmarkLink","bookmarkTrigger","trigger","& svg","smallTitleText","subParagraph","memo","borderLeft","overflowWrap","block","blockHead","& img","blockBody","blockTitle","connectingList","connectingItem","connectingTitle","bodyParagraph","roadmapBlock","&:not(:last-of-type):before","&:after","border","roadmapBlockHead","roadmapBlockBody","roadmapBlockTitle","roadmapBlockMessage","aboutTitle","aboutLogo","notFound","link","titleId","defaultTitle","external","Navbar","isNavMenuOpen","localeMenuAnchor","toggleNavMenu","closeNavMenu","openLocaleMenu","event","currentTarget","selectLocale","closeLocaleMenu","setLocale","getLinkDOM","linkList","MenuItem","_this$props2","_this$state","isLocaleMenuOpen","Boolean","linkDOM","mobileLinkDOM","anchorEl","getElementsByClassName","Fragment","AppBar","Toolbar","IconButton","Menu","open","onClose","disableAutoFocusItem","MenuListProps","disablePadding","disabled","navbar","borderBottom","toolbar","minHeight","nav","mobileNav","logoLink","mobileLogoLink","mobileLogoImg","linkText","boxSizing","&:not(:last-of-type)","linkContainer","mobileMenu","mobileMenuPaper","mobileMenuLink","mobileLinkText","menuButton","localeButton","localeIcon","localeMenuPaper","right","localeMenuList","localeMenuTitle","localeMenuItem","footer","copyrightText","contactLink","addLocaleData","toConsumableArray","en","zh","theme","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","join","App","handleScroll","triggerElement","triggerHeight","offsetTop","innerHeight","showToTopButton","scrollToTop","network","initialize","func","timeout","wait","undefined","immediate","context","args","callNow","clearTimeout","nextState","MuiThemeProvider","static","CssBaseline","BrowserRouter","Google_Analytics","components_Navbar","Switch","shared_ScrollToRoute","exact","Home","status","NotFound","Redirect","components_Footer","ArrowUpward_default","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.3a94b4c8.chunk.js","sourcesContent":["const localeConfig = [\n    {\n        code: 'us',\n        locale: 'en',\n        languageCode: 'en-us',\n        display: 'English',\n        shortDisplay: 'EN',\n        file: () => import('./messages/en_US')\n    },\n    {\n        code: 'tw',\n        locale: 'zh',\n        languageCode: 'zh-tw',\n        display: '繁體中文',\n        shortDisplay: '繁',\n        file: () => import('./messages/zh_TW')\n    }\n]\n\nexport default localeConfig;","export const STYLES_CONST = Object.freeze({\n    primaryColor: '#FF7D2F',\n    secondaryColor: '#FF4D4D',\n    fontColor: '#4C4948',\n    jobColor: '#949291',\n    letterSpacing: 1,\n    navHeight: '80px',\n    footerHeight: '275px'\n})\n\nexport const SHARED_STYLES = Object.freeze({\n    wrapper: {\n        paddingTop: STYLES_CONST.navHeight,\n        paddingBottom: STYLES_CONST.footerHeight,\n    },\n    section: {\n        width: '100%',\n        padding: '72px 10%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative'\n    },\n    container: {\n        width: '100%',\n        height: '100%',\n        maxWidth: 'calc(1180px)',\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    button: {\n        minWidth: '221px',\n        height: '64px',\n        borderRadius: '32px',\n        padding: '5px 32px',\n        fontSize: '28px',\n        fontWeight: '700',\n        letterSpacing: '1px',\n        textTransform: 'none',\n        boxShadow: 'none',\n        '&:hover': {\n            backgroundColor: STYLES_CONST.secondaryColor\n        },\n        '&:focus': {\n            backgroundColor: '#E54545'\n        }\n    },\n    outlinedButton: {\n        minWidth: '221px',\n        height: '64px',\n        borderRadius: '32px',\n        padding: '5px 32px',\n        fontSize: '28px',\n        fontWeight: '700',\n        letterSpacing: '1px',\n        textTransform: 'none',\n        boxShadow: 'none',\n        '&:hover': {\n            color: 'white',\n            backgroundColor: STYLES_CONST.primaryColor\n        },\n        '&:focus': {\n            color: 'white',\n            backgroundColor: STYLES_CONST.secondaryColor\n        }\n    },\n    buttonLink: {\n        textDecoration: 'none'\n    },\n    flatButton: {\n        transition: 'all 0.3s',\n        '&:hover': {\n            backgroundColor: 'unset'\n        },\n        '&.active': {\n            color: STYLES_CONST.primaryColor\n        }\n    },\n    titleText: {\n        fontSize: '40px',\n        fontWeight: '700',\n        letterSpacing: `${STYLES_CONST.letterSpacing}px`,\n        marginBottom: '60px'\n    },\n    subTitleText: {\n        fontSize: '24px',\n        fontWeight: '500',\n        letterSpacing: `${STYLES_CONST.letterSpacing}px`,\n        marginBottom: '48px',\n        maxWidth: '880px'\n    },\n    headLineText: {\n        fontSize: '28px',\n        fontWeight: '700',\n        letterSpacing: `${STYLES_CONST.letterSpacing}px`,\n        marginBottom: '16px'\n    },\n    bodyText: {\n        fontSize: '16px',\n        letterSpacing: `${STYLES_CONST.letterSpacing}px`,\n        lineHeight: '24px'\n    },\n    paragraph: {\n        fontSize: '24px',\n        lineHeight: '36px',\n        letterSpacing: `${STYLES_CONST.letterSpacing}px`,\n        marginTop: '0',\n        marginBottom: '28px',\n        textAlign: 'center',\n        fontWeight: '500',\n        maxWidth: '880px',\n        '&:last-child': {\n            marginBottom: '0'\n        }\n    },\n    anchor: {\n        position: 'absolute',\n        top: '0',\n        left: '0'\n    },\n    build: {\n        height: '200px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    buildIcon: {\n        fontSize: '64px',\n        animation: 'buildIcon 3s ease-out infinite'\n    },\n    illImg: {\n        maxWidth: '100%'\n    }\n});","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n\nclass ScrollToRoute extends Component {\n\n    componentDidMount() {\n        if (this.props.location.state) {\n            this.props.location.state.shouldScroll = false;\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const state = this.props.location.state;\n        if (state && state.shouldScroll) {\n            this.props.location.state.shouldScroll = false;\n            const isRouteUpdate = this.props.path === this.props.location.pathname && this.props.location.pathname !== prevProps.location.pathname;\n            const behavior = isRouteUpdate ? 'instant' : 'smooth'\n            setTimeout(() => {\n                const element = document.getElementById(state.anchor || 'root');\n                element.scrollIntoView({ behavior: behavior });\n            }, 0);\n        }\n    }\n\n    render() {\n        const { component: Component, ...rest } = this.props;\n        return <Route {...rest} render={props => (<Component {...props} />)} />;\n    }\n}\n\nexport default withRouter(ScrollToRoute);","export const usingClasses = (classes, name) => {\n    if (!classes[name]) {\n        return name;\n    }\n    return `${name} ${classes[name]} `;\n}\n\nexport const loadLocaleData = async (localeConfig, currentLocale, defaultLocale) => {\n    const config = localeConfig.find(l => l.locale === currentLocale)\n        || localeConfig.find(l => l.locale === defaultLocale);    \n    const data = await config.file().then(res => res.default);\n    return data;\n}\n\nexport const debounce = (func, wait = 20, immediate = true) =>{\n    let timeout;\n    return function() {\n      const context = this;\n      const args = arguments;\n      const later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }","import React from 'react';\nimport { loadLocaleData } from '../../utils/utils';\nimport localeConfig from '../../i18n/locale-config';\n\nclass IntlComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            intlData: null\n        };\n        this.isMount = true;\n    }\n\n    safeSetState = (newState) => {\n        if (this.isMount) {\n            this.setState(newState);\n        }\n    }\n\n    componentWillUnmount() {\n        this.isMount = false;\n    }\n\n    componentDidMount() {\n        this.loadLocaleData(this.props);\n    }\n\n    componentWillUpdate(nextProps) {\n        const { intl } = this.props;\n\n        if (!intl) {\n            throw Error('intl not found');\n        }\n\n        if (nextProps.intl.locale !== intl.locale) {\n            this.loadLocaleData(nextProps);\n        }\n    }\n\n    loadLocaleData = (props) => {\n        const { intl } = props;\n\n        if (!intl) {\n            throw Error('intl not found');\n        }\n\n        loadLocaleData(localeConfig, intl.locale, intl.defaultLocale).then(data => {\n            this.safeSetState({ intlData: data });\n        });\n    }\n}\n\nexport default IntlComponent;","import ReactGA from 'react-ga';\nimport { withRouter } from \"react-router\";\n\nconst GoogleAnalytics = props => {\n    ReactGA.set({ page: props.location.pathname });\n    ReactGA.pageview(props.location.pathname);\n    return null;\n}\n\nexport default withRouter(GoogleAnalytics);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { STYLES_CONST, SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nconst Cover = props => {\n    const { classes } = props;\n    return (\n        <section className={usingClasses(classes, 'cover')}>\n            <div id=\"cover\" className={usingClasses(classes, 'anchor')} />\n            <div className={usingClasses(classes, 'container')}>\n                <div className={usingClasses(classes, 'titleContainer')}>\n                    <span className={usingClasses(classes, 'title')}>\n                        <FormattedMessage\n                            id=\"cover_title\"\n                            defaultMessage={'Connecting Worlds'}\n                        />\n                    </span>\n                    <span className={usingClasses(classes, 'slogan')}>\n                        <FormattedMessage\n                            id=\"cover_slogan\"\n                            defaultMessage={'Make the world more flexible with blockchain technology.'}\n                        />\n                    </span>\n                    <Button variant=\"contained\" color=\"primary\" className={usingClasses(classes, 'button')}>\n                        <Link to={{ pathname: '/', state: { shouldScroll: true, anchor: 'product' } }} className={usingClasses(classes, 'buttonLink')}>\n                            <FormattedMessage\n                                id=\"cover_button\"\n                                defaultMessage={'Learn More'}\n                            />\n                        </Link>\n                    </Button>\n                    <span className={usingClasses(classes, 'mobileIcon')}>\n                        SCROLL\n                        <img src=\"/images/expand_more.svg\" alt=\"expand_more\"/>\n                    </span>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    cover: {\n        width: '100%',\n        height: `calc(100vh - ${STYLES_CONST.navHeight})`,\n        maxHeight: '1080px',\n        padding: '16px 10% 0 10%',\n        background: 'url(\"/images/jumbotron_bg-lg.svg\") center center',\n        backgroundSize: 'cover'\n    },\n    container: Object.assign({ ...SHARED_STYLES.container}, {\n        alignItems: 'flex-start'\n    }),\n    titleContainer: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n    },\n    title: {\n        fontSize: '64px',\n        fontWeight: '700',\n        letterSpacing: `${STYLES_CONST.letterSpacing}px`,\n    },\n    slogan: {\n        fontSize: '32px',\n        marginTop: '24px',\n        marginBottom: '56px'\n    },\n    mobileIcon: {\n        alignSelf: 'center',\n        fontSize: '16px',\n        color: STYLES_CONST.primaryColor,\n        display: 'none',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: '24px'\n    }\n});\n\nexport default withStyles(styles)(injectIntl(Cover));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nconst Product = props => {\n    const { classes } = props;\n    return (\n        <section className={usingClasses(classes, 'section')}>\n            <div id=\"product\" className={usingClasses(classes, 'anchor')} />\n            <div className={usingClasses(classes, 'container')}>\n                <span className={usingClasses(classes, 'titleText')}>\n                    <FormattedMessage\n                        id=\"product_title\"\n                        defaultMessage={'Products'}\n                    />\n                </span>\n                <span className={usingClasses(classes, 'subTitleText')}>\n                    <FormattedMessage\n                        id=\"product_sub_title\"\n                        defaultMessage={'Our Goal is to Sed ut perspiciatis unde omnis iste'}\n                    />\n                </span>\n                <img src=\"/images/products_ill.svg\" alt=\"'products_ill\" className={usingClasses(classes, 'illImg')} />\n            </div>\n        </section>\n    );\n};\n\nconst styles = SHARED_STYLES;\n\nexport default withStyles(styles)(injectIntl(Product));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { STYLES_CONST, SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport Paper from '@material-ui/core/Paper';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IntlComponent from './shared/IntlComponent';\n\n\nclass Technology extends IntlComponent {\n    render() {\n        const { classes } = this.props;\n        const { intlData } = this.state;\n\n        if (!intlData) {\n            return null;\n        }\n\n        const technology = intlData.technology;\n\n        if (!technology) {\n            return null;\n        }\n\n        const techDOM = getTechDOM(technology, classes);\n        return (\n            <section className={usingClasses(classes, 'section') + usingClasses(classes, 'techSection')}>\n                <div id=\"technology\" className={usingClasses(classes, 'anchor')} />\n                <div className={usingClasses(classes, 'container')}>\n                    <span className={usingClasses(classes, 'titleText')}>\n                        <FormattedMessage\n                            id=\"tech_title\"\n                            defaultMessage={'Technology'}\n                        />\n                    </span>\n                    <div className={usingClasses(classes, 'list')}>\n                        {techDOM}\n                    </div>\n                    <Button color=\"primary\" className={usingClasses(classes, 'flatButton')}>\n                        <Link to={{ pathname: \"/agora\", state: { shouldScroll: true }}} className={usingClasses(classes, 'buttonLink')}>\n                            <FormattedMessage\n                                id=\"tech_button\"\n                                defaultMessage={'More Details'}\n                            />\n                            <ArrowForward className={usingClasses(classes, 'arrowIcon')}/>\n                        </Link>\n                    </Button>\n                </div>\n            </section>\n        );\n    }\n};\n\nconst getTechDOM = (techList, classes) => {\n    let techDOM = null;\n    if (techList && techList.length > 0) {\n        techDOM = techList.map((tech, idx) => (\n            <div className={usingClasses(classes, 'techItem')} key={idx}>\n                <Paper elevation={1} className={usingClasses(classes, 'paper')}>\n                    <div className={usingClasses(classes, 'head')}>\n                        <img src={tech.icon} alt=\"tech_icon\" className={usingClasses(classes, 'techIcon')} />\n                    </div>\n                    <div className={usingClasses(classes, 'body')}>\n                        <span className={usingClasses(classes, 'headLineText')}>\n                            {tech.title}\n                        </span>\n                        <span className={usingClasses(classes, 'bodyText')}>\n                            {tech.content}\n                        </span>\n                    </div>\n                </Paper>\n            </div>\n        ))\n    }\n    return techDOM;\n}\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    techSection: {\n        backgroundColor: 'rgba(76, 73, 72, 0.05)'\n    },\n    list: {\n        width: '100%',\n        marginTop: '12px',\n        marginBottom: '72px',\n        display: 'flex',\n        marginLeft: '-10px',\n        marginRight: '-10px'\n    },\n    techItem: {\n        width: '33.3%',\n        paddingLeft: '10px',\n        paddingRight: '10px'\n    },\n    head: {\n        backgroundColor: STYLES_CONST.primaryColor,\n        padding: '36px 0',\n        borderRadius: '4px 4px 0 0',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '24px 32px 36px 32px'\n    },\n    paper: {\n        height: '100%'\n    },\n    headLineText: Object.assign({ ...SHARED_STYLES.headLineText }, {\n        fontSize: '24px'\n    }),\n    bodyText: Object.assign({ ...SHARED_STYLES.bodyText }, {\n        fontWeight: '500'\n    }),\n    flatButton: Object.assign({ ...SHARED_STYLES.flatButton }, {\n        fontSize: '28px',\n        fontWeight: '700',\n        textTransform: 'unset',\n        '&:hover': {\n            backgroundColor: 'unset',\n        }\n    }),\n    arrowIcon: {\n        fontSize: '24px',\n        marginLeft: '4px',\n        transform: 'translateY(3px)',\n    }\n})\n\nexport default withStyles(styles)(injectIntl(Technology));\n","import React from 'react';\nimport Cover from './Cover';\nimport Product from './Product';\n// import Founder from './Founder';\nimport Technology from './Technology';\n// import JoinUs from './Join-Us';\nimport { SHARED_STYLES } from '../utils/shared-styles';\nimport { withStyles } from '@material-ui/core';\nimport { usingClasses } from '../utils/utils';\n\nconst Home = props => {\n    const { classes } = props;\n    return (\n        <div className={usingClasses(classes, 'wrapper')}>\n            <Cover />\n            <Product />\n            <Technology />\n            {/* <Founder /> */}\n            <div id=\"to-top-trigger\" />\n            {/* <JoinUs /> */}\n        </div>\n    );\n};\n\nconst styles = SHARED_STYLES;\n\nexport default withStyles(styles)(Home);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { STYLES_CONST, SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\n// import Grid from \"@material-ui/core/Grid\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IntlComponent from \"./shared/IntlComponent\";\n// import CONST from \"../utils/const\";\n\n\nclass TeamMember extends IntlComponent {\n    render() {\n        const { classes } = this.props;\n        const { intlData } = this.state;\n\n        if (!intlData) {\n            return null;\n        }\n        const founder = intlData.founder;\n        const teamMember = intlData.team_member;\n\n        if ((!founder || !founder.length) && (!teamMember || !teamMember.length)) {\n            return null;\n        }\n\n        const founderDOM = getFounderDOM(founder, classes);\n        const teamMemberDOM = getTeamMemberDOM(teamMember, classes);\n        return (\n            <section className={usingClasses(classes, 'section') + usingClasses(classes, 'teamMemberSection')}>\n                <div className={usingClasses(classes, 'container')}>\n                    <span className={usingClasses(classes, 'titleText')}>\n                        <FormattedMessage\n                            id=\"team_member_title\"\n                            defaultMessage={'Our Members'}\n                        />\n                    </span>\n                    <div className={usingClasses(classes, 'founderList')}>\n                        {founderDOM}\n                    </div>\n                    <div id=\"to-top-trigger\" />\n                    <div className={usingClasses(classes, 'memberList')}>\n                        {teamMemberDOM}\n                    </div>\n                </div>\n            </section>\n        );\n    }\n};\n\nconst getFounderDOM = (founderList, classes) => {\n    let founderDOM = null;\n    if (founderList && founderList.length > 0) {\n        founderDOM = founderList.map((founder, idx) => (\n            <div key={idx} className={usingClasses(classes, 'founderItem')}>\n                <div className={usingClasses(classes, 'head')}>\n                    <img src={founder.photo} alt=\"founder_photo\" className={usingClasses(classes, 'photo')} />\n                </div>\n                <div className={usingClasses(classes, 'body')}>\n                    <span className={usingClasses(classes, 'headLineText')}>\n                        {founder.name}\n                    </span>\n                    <span className={usingClasses(classes, 'bodyText')}>\n                        <FormattedMessage\n                            id=\"founder_title\"\n                            defaultMessage=\"Co-Founder\"\n                        />\n                    </span>\n                    {/* <span className={usingClasses(classes, 'bodyText')}>\n                        {founder.description}\n                    </span> */}\n                </div>\n            </div>\n        ))\n    }\n    return founderDOM;\n}\n\nconst getTeamMemberDOM = (teamMember, classes) => {\n    let teamMemberDOM = null;\n    if (teamMember && teamMember.length > 0) {\n        teamMemberDOM = teamMember.map((member, idx) => (\n            <div key={idx} className={usingClasses(classes, 'memberItem')}>\n                <div className={usingClasses(classes, 'head')}>\n                    <img src={member.photo} alt=\"memeber_photo\" className={usingClasses(classes, 'photo')} />\n                </div>\n                <div className={usingClasses(classes, 'body')}>\n                    <span className={usingClasses(classes, 'headLineText')}>\n                        {member.name}\n                    </span>\n                    <span className={usingClasses(classes, 'bodyText')}>\n                        {member.job}\n                    </span>\n                </div>\n            </div>\n        ))\n    }\n    return teamMemberDOM;\n}\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    teamMemberSection: {\n        backgroundColor: '#FFF'\n    },\n    founderList: {\n        width: '75%',\n        maxWidth: '690px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n    },\n    founderItem: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        marginRight: '30px',\n        marginLeft: '30px',\n        marginBottom: '80px'\n    },\n    head: {\n        width: '100%',\n        maxWidth: '180px',\n        textAlign: 'center'\n    },\n    photo: {\n        maxWidth: '180px',\n        borderRadius: '16px'\n    },\n    body: {\n        marginTop: '3px',\n        display: 'flex',\n        flexDirection: 'column',        \n    },\n    headLineText: Object.assign({ ...SHARED_STYLES.headLineText }, {\n        fontSize: '20px',\n        marginBottom: '2px',\n        color: STYLES_CONST.primaryColor\n    }),    \n    bodyText: Object.assign({\n        fontSize: '14px',\n        fontWeight: '600',\n        color: STYLES_CONST.jobColor\n    }),\n    memberList: {\n        width: '100%',\n        maxWidth: '900px',\n        marginBottom: '72px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n    },\n    memberItem: {\n        display: 'flex',\n        flexDirection: 'column',        \n        justifyContent: 'flex-start',\n        marginRight: '30px',\n        marginLeft: '30px',\n        marginBottom: '80px'\n    },\n    memberPhoto: {\n        width: '100%',\n        maxWidth: '180px',\n        marginBottom: '24px',\n    },\n    memberName: Object.assign({ ...SHARED_STYLES.headLineText }, {\n        marginBottom: '16px'\n    }),\n    memberJob: Object.assign({ ...SHARED_STYLES.bodyText }, {\n        fontWeight: '600'\n    }),\n    linkIcon: {\n        width: '24px',\n        opacity: '0.54',\n        marginRight: '8px',\n        '&:hover': {\n            opacity: '0.84'\n        }\n    }\n})\n\nexport default withStyles(styles)(injectIntl(TeamMember));\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SHARED_STYLES } from \"../../utils/shared-styles\";\nimport { usingClasses } from \"../../utils/utils\";\n\nconst Paragraph = props => {\n    const { classes, messages, type } = props;\n    const msgValues = Object.values(messages);\n\n    if (!msgValues || msgValues.length === 0) {\n        return null;\n    }\n\n    return msgValues.map((msg, idx) => (\n        <p className={usingClasses(classes, type)} key={idx}>\n            {msg}\n        </p>\n    ));\n};\n\nParagraph.defaultProps = {\n    type: 'paragraph'\n}\n\nconst styles = SHARED_STYLES;\n\nexport default withStyles(styles)(Paragraph);\n","const CONST = {\n    githubURL: 'https://github.com/aetheras-io',\n    twitterURL: 'https://twitter.com/aetheras_io',\n    discordURL: 'https://discord.gg/R9TCtyh',\n    contactMail: 'mailto:business@aetheras.io',\n    recruitURL: 'https://www.yourator.co/companies/Aetheras',\n    whitePaperURL: 'https://www.aetheras.io/404',\n    googleAnalyticsID: 'UA-142380558-1'\n}\n\nexport default CONST;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport CONST from '../utils/const';\n\nconst JoinUs = (props) => {\n    const { classes } = props;\n\n    return (\n        <section className={usingClasses(classes, 'section') + usingClasses(classes, 'joinUsSection')}>\n            <div id=\"join_us\" className={usingClasses(classes, 'anchor')} />\n            <div className={usingClasses(classes, 'container')}>\n                <span className={usingClasses(classes, 'titleText')}>\n                    <FormattedMessage\n                        id=\"join_us_title\"\n                        defaultMessage={'We are Hiring'}\n                    />\n                </span>\n                <span className={usingClasses(classes, 'subTitleText')}>\n                    <FormattedMessage\n                        id=\"join_us_message\"\n                        defaultMessage={'We are currently hiring for various roles at our Taipei office. Please visit our Yourator page for details'}\n                    />\n                </span>\n                <Button variant=\"contained\" color=\"primary\" className={usingClasses(classes, 'button')}>\n                    <a\n                        target=\"_blank\"\n                        href={CONST.recruitURL}\n                        rel=\"noopener noreferrer\"\n                        className={usingClasses(classes, 'buttonLink')}\n                    >\n                        <FormattedMessage\n                            id=\"join_us_button\"\n                            defaultMessage={'Learn More'}\n                        />\n                    </a>\n                </Button>\n            </div>\n        </section>\n    );\n};\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    joinUsSection: {\n        background: 'url(\"/images/hiring_bg.png\")',\n        backgroundSize: 'cover'\n    },\n    subTitleText: Object.assign({ ...SHARED_STYLES.subTitleText }, {\n        marginBottom: '72px'\n    })\n});\n\nexport default withStyles(styles)(injectIntl(JoinUs));\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport TeamMember from \"./TeamMember.js\";\nimport IntlComponent from './shared/IntlComponent';\nimport Paragraph from \"./shared/Paragraph\";\nimport JoinUs from './Join-Us';\n\nclass About extends IntlComponent {\n    render() {\n        const { classes } = this.props;\n        const { intlData } = this.state;\n\n        if (!intlData) {\n            return null;\n        }\n\n        const aboutUs = intlData.about_us;\n\n        if (!aboutUs) {\n            return null;\n        }\n\n        return (\n            <div className={usingClasses(classes, 'wrapper')}>\n                <section className={usingClasses(classes, 'section') + usingClasses(classes, 'aboutSection')}>\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'titleText')}>\n                            <FormattedMessage\n                                id=\"about_title\"\n                                defaultMessage={'Our Culture'}\n                            />\n                        </span>\n                        <div className={usingClasses(classes, 'body')}>\n                            <Paragraph messages={aboutUs} />\n                        </div>\n                        <img src=\"/images/about_ill.svg\" alt=\"about_ill\" className={usingClasses(classes, 'aboutIll')} />\n                    </div>\n                </section>\n                <TeamMember />\n                <JoinUs />\n            </div>\n        );\n    }\n};\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    aboutSection: {\n        backgroundColor: '#FFF8F4',\n        padding: '72px 20%'\n    },\n    subTitleText: Object.assign({ ...SHARED_STYLES.subTitleText }, {\n        marginBottom: '60px'\n    }),\n    body: {\n        marginBottom: '60px'\n    },\n    aboutIll: {\n        width: '100%'\n    }\n});\n\nexport default withStyles(styles)(injectIntl(About));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ArrowRight from '@material-ui/icons/ArrowRight';\nimport { STYLES_CONST, SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport Paper from '@material-ui/core/Paper';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IntlComponent from './shared/IntlComponent';\nimport CONST from '../utils/const';\nimport { debounce } from 'lodash';\n\nclass Whitepaper extends IntlComponent {\n    state = {\n        scrollHeight: window.scrollY,\n        isBookmarkOpen: false\n    }\n\n    componentDidMount() {\n        this.isDidMount = true;\n        window.addEventListener('scroll', debounce(() => {\n            this.safeSetState({ scrollHeight: window.scrollY })\n        }, { maxWait: 1000 }));\n    }\n\n    componentWillUnmount() {\n        this.isMount = false;\n        window.removeEventListener('scroll', debounce(() => this.safeSetState({ scrollHeight: window.scrollY }), { maxWait: 1000 }));\n    }\n\n    onBookmarkClick = (name) => () => {\n        const elem = document.getElementById(name);\n        elem.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    onBookmarkTrigger = () => {\n        this.safeSetState(prevState => {return { isBookmarkOpen: !prevState.isBookmarkOpen }})\n    }\n\n    closeBookmark = () => {\n        this.safeSetState({ isBookmarkOpen: false });\n    }\n\n    getBookMarkActive = () => {\n        if (this.isDidMount) {\n            return {\n                whatIsAgora: true,\n                motivation: document.getElementById('motivation').getBoundingClientRect().top <= 20,\n                developers: document.getElementById('developers').getBoundingClientRect().top <= 20,\n                gamers: document.getElementById('gamers').getBoundingClientRect().top <= 20,\n                connecting: document.getElementById('connecting').getBoundingClientRect().top <= 20,\n                alliance: document.getElementById('alliance').getBoundingClientRect().top <= 20,\n                ownership: document.getElementById('ownership').getBoundingClientRect().top <= 20,\n                freedom: document.getElementById('freedom').getBoundingClientRect().top <= 20,\n                technology: document.getElementById('technology').getBoundingClientRect().top <= 20,\n                community: document.getElementById('community').getBoundingClientRect().top <= 20,\n                revenue: document.getElementById('revenue').getBoundingClientRect().top <= 20,\n                roadmap: document.getElementById('roadmap').getBoundingClientRect().top <= 20,\n                about: document.getElementById('about').getBoundingClientRect().bottom <= 460,\n            }\n        } else {\n            return {\n                whatIsAgora: true,\n                motivation: false,\n                developers: false,\n                gamers: false,\n                connecting: false,\n                alliance: false,\n                ownership: false,\n                freedom: false,\n                technology: false,\n                community: false,\n                revenue: false,\n                roadmap: false,\n                about: false,\n            }\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { isBookmarkOpen } = this.state;\n        let scrollPercentage = 0;\n        const isBookmarkActive = this.getBookMarkActive();\n        if (this.isDidMount) {\n            const bookmarkCount = Object.values(isBookmarkActive).length;\n            const activeCount = Object.values(isBookmarkActive).filter(a => a).length;\n            scrollPercentage = Math.floor((activeCount / bookmarkCount).toFixed(2) * 100);\n        }\n        return (\n            <div className={`${usingClasses(classes, 'wrapper')} whitepaper`}>\n                <div className={`${usingClasses(classes, 'bookmarkOverlay')} ${isBookmarkOpen ? ' active' : ''}`} onClick={this.onBookmarkTrigger}>\n                    <div className={`${usingClasses(classes, 'bookmarkContainer')} ${isBookmarkOpen ? ' active' : ''}`}>\n                        <div className={usingClasses(classes, 'bookmark')}>\n                            <div className={usingClasses(classes, 'bookmarkScrollbar')}>\n                                <div className={usingClasses(classes, 'scrollbar')} style={{ height: `${scrollPercentage}%` }} />\n                            </div>\n                            <Paper className={usingClasses(classes, 'bookmarkPaper')}>\n                                <Button className={`${usingClasses(classes, 'bookmarkLink')} ${isBookmarkActive.whatIsAgora ? ' active' : ''}`} onClick={this.onBookmarkClick('what-is-agora')} disableRipple={true}>What is Agora</Button>\n                                <Button className={`${usingClasses(classes, 'bookmarkLink')} ${isBookmarkActive.motivation ? ' active' : ''}`} onClick={this.onBookmarkClick('motivation')} disableRipple={true}>Motivation From Pain Points</Button>\n                                <Button className={`${usingClasses(classes, 'subBookmarkLink')} ${isBookmarkActive.developers ? ' active' : ''}`} onClick={this.onBookmarkClick('developers')} disableRipple={true}>Developers</Button>\n                                <Button className={`${usingClasses(classes, 'subBookmarkLink')} ${isBookmarkActive.gamers ? ' active' : ''}`} onClick={this.onBookmarkClick('gamers')} disableRipple={true}>Gamers</Button>\n                                <Button className={`${usingClasses(classes, 'bookmarkLink')} ${isBookmarkActive.connecting ? ' active' : ''}`} onClick={this.onBookmarkClick('connecting')} disableRipple={true}>Connecting gaming worlds with blockchain</Button>\n                                <Button className={`${usingClasses(classes, 'subBookmarkLink')} ${isBookmarkActive.alliance ? ' active' : ''}`} onClick={this.onBookmarkClick('alliance')} disableRipple={true}>Alliance of Developers</Button>\n                                <Button className={`${usingClasses(classes, 'subBookmarkLink')} ${isBookmarkActive.ownership ? ' active' : ''}`} onClick={this.onBookmarkClick('ownership')} disableRipple={true}>Asset Ownership</Button>\n                                <Button className={`${usingClasses(classes, 'subBookmarkLink')} ${isBookmarkActive.freedom ? ' active' : ''}`} onClick={this.onBookmarkClick('freedom')} disableRipple={true}>Gaming Freedom</Button>\n                                <Button className={`${usingClasses(classes, 'subBookmarkLink')} ${isBookmarkActive.technology ? ' active' : ''}`} onClick={this.onBookmarkClick('technology')} disableRipple={true}>Technology</Button>\n                                <Button className={`${usingClasses(classes, 'subBookmarkLink')} ${isBookmarkActive.community ? ' active' : ''}`} onClick={this.onBookmarkClick('community')} disableRipple={true}>Community</Button>\n                                <Button className={`${usingClasses(classes, 'subBookmarkLink')} ${isBookmarkActive.revenue ? ' active' : ''}`} onClick={this.onBookmarkClick('revenue')} disableRipple={true}>Revenue Model</Button>\n                                <Button className={`${usingClasses(classes, 'bookmarkLink')} ${isBookmarkActive.roadmap ? ' active' : ''}`} onClick={this.onBookmarkClick('roadmap')} disableRipple={true}>Roadmap</Button>\n                                <Button className={`${usingClasses(classes, 'bookmarkLink')} ${isBookmarkActive.about ? ' active' : ''}`} onClick={this.onBookmarkClick('about')} disableRipple={true}>About Aetheras</Button>\n                            </Paper>\n                        </div>\n                    </div>\n                    <div className={`${usingClasses(classes, 'bookmarkTrigger')} ${isBookmarkOpen ? ' active' : ''}`}>\n                        <span className={`${usingClasses(classes, 'trigger')} ${isBookmarkOpen ? ' active' : ''}`}>\n                            <ArrowRight />\n                        </span>\n                    </div>\n                </div>\n                <section className={`${usingClasses(classes, 'section')} what-is-agora`} onClick={this.closeBookmark}>\n                    <div id=\"what-is-agora\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'titleText')}>\n                            <FormattedMessage\n                                id=\"what_is_agora_title\"\n                                defaultMessage={'What is Agora'}\n                            />\n                        </span>\n                        <img src=\"/images/products_ill.svg\" alt=\"products_ill\" className={usingClasses(classes, 'illImg')} />\n                        <p className={usingClasses(classes, 'subTitleText')}>\n                            <FormattedMessage\n                                id=\"what_is_agora_message\"\n                                defaultMessage={'Agora is a game asset centric platform that aims to provide a way to connect the virtual worlds of games.'}\n                            />\n                        </p>\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} motivation`} onClick={this.closeBookmark}>\n                    <div id=\"motivation\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'titleText')}>\n                            <FormattedMessage\n                                id=\"motivation_title\"\n                                defaultMessage={'Motivation From Pain Points'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'subTitleText')}>\n                            <FormattedMessage\n                                id=\"motivation_sub_title\"\n                                defaultMessage={'Our main motivation is to solve pain points in the gaming industry, as well as creating practical uses for blockchain technology.'}\n                            />\n                        </span>\n                        <img src=\"/images/motivation.png\" alt=\"motivation\" className={usingClasses(classes, 'illImg')} />\n                        <p className={usingClasses(classes, 'bodyText')}>\n                            <FormattedMessage\n                                id=\"motivation_message_1\"\n                                defaultMessage={'To say the gaming industry is hyper competitive would be an understatement. With 9050 new games released on Steam alone in 2018, each desperately fight for screen time.'}\n                            />\n                        </p>\n                        <p className={usingClasses(classes, 'bodyText')}>\n                            <FormattedMessage\n                                id=\"motivation_message_2\"\n                                defaultMessage={'For Indie Game Developers, simply getting a game noticed therefore becomes an even more monumental task than in the past. Naturally due to limited resources, Indie Developers face an increasingly difficult task to raise awareness about their games.'}\n                            />\n                        </p>\n                        <div className={usingClasses(classes, 'memo')}>\n                            <FormattedMessage\n                                id=\"motivation_memo\"\n                                defaultMessage={`1 \"• Number of games released on Steam 2018 | Statistic - Statista.\" Accessed May 29, 2019.`}\n                            />\n                            <span>https://www.statista.com/statistics/552623/number-games-released-steam/</span>\n                        </div>\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} developers`} onClick={this.closeBookmark}>\n                    <div id=\"developers\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"developers_title\"\n                                defaultMessage={'Developers'}\n                            />\n                        </span>\n                        <p className={usingClasses(classes, 'subParagraph')}>\n                            <FormattedMessage\n                                id=\"developers_sub_title\"\n                                defaultMessage={'Here are some pain points that Game Developers face:'}\n                            />\n                        </p>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/resources.svg\" alt=\"resources\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"developers_resources_title\"\n                                        defaultMessage={'Resources'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"developers_resources_message\"\n                                        defaultMessage={'Despite having great ideas, many teams are unable to fully execute their visions due to physical limitations such as team size or technical expertise.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/competition.svg\" alt=\"competition\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"developers_competition_title\"\n                                        defaultMessage={'Competition'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"developers_competition_message\"\n                                        defaultMessage={'With an increasing number of games released per year, catching the attention of players is increasingly difficult.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/isolability.svg\" alt=\"isolability\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"developers_isolability_title\"\n                                        defaultMessage={'Isolability'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"developers_isolability_message\"\n                                        defaultMessage={'Most games exist in isolation and do not have interactions with other games, even from the same developer.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/alliances.svg\" alt=\"alliances\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"developers_alliances_title\"\n                                        defaultMessage={'Alliances'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"developers_alliances_message\"\n                                        defaultMessage={'With the increasing amount of competition and how most games work in isolation, there’s a strong need for smaller developers to form alliances more than ever. However, due to the lack of resources, this is usually closer to being a fantasy than a practical strategy.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} gamers`} onClick={this.closeBookmark}>\n                    <div id=\"gamers\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"gamers_title\"\n                                defaultMessage={'Gamers'}\n                            />\n                        </span>\n                        <p className={usingClasses(classes, 'subParagraph')}>\n                            <FormattedMessage\n                                id=\"gamers_sub_title\"\n                                defaultMessage={'Gamers face a similar set of pain points, but from the other perspective.'}\n                            />\n                        </p>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/ownership.svg\" alt=\"ownership\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"gamers_ownership_title\"\n                                        defaultMessage={'Ownership'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"gamers_ownership_message\"\n                                        defaultMessage={'Many games in recent years sell virtual items, whether directly or via loot box mechanics. Unlike how traditionally owning a game meant having a physically copy, this ownership model means players are at the mercy of the developer’s servers. Players own the items only if the servers are alive and the developer doesn’t run out of business.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/addiction.svg\" alt=\"addiction\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"gamers_addiction_title\"\n                                        defaultMessage={'Addiction'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"gamers_addiction_message\"\n                                        defaultMessage={'A game that’s considered addicting is usually a good thing, meaning that it’s fun and players want to come back to play. However, after a certain point, this becomes unhealthy.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/barrier.svg\" alt=\"barrier\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"gamers_barrier_title\"\n                                        defaultMessage={'Barrier to try new games'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"gamers_barrier_message\"\n                                        defaultMessage={'Finding time to even try new games is also increasingly more difficult. Games employ numerous tactics such as daily quests and time limited events to entice players to spend at least a certain amount of time everyday. Trying a new game could mean losing precious time and items from the game that the player has been playing.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} connecting`} onClick={this.closeBookmark}>\n                    <div id=\"connecting\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'titleText')}>\n                            <FormattedMessage\n                                id=\"connecting_title\"\n                                defaultMessage={'Connecting gaming worlds with blockchain'}\n                            />\n                        </span>\n                        <p className={usingClasses(classes, 'paragraph')}>\n                            <FormattedMessage\n                                id=\"connecting_meesage_1\"\n                                defaultMessage={'Agora is a network that enables the connecting of games, opening doors to developer alliances and strategic partnerships.'}\n                            />\n                        </p>\n                        <p className={usingClasses(classes, 'paragraph')}>\n                            <FormattedMessage\n                                id=\"connecting_meesage_2\"\n                                defaultMessage={'In short, Agora aims to solve issues surrounding:'}\n                            />\n                        </p>\n                        <div className={usingClasses(classes, 'connectingList')}>\n                            <div className={usingClasses(classes, 'connectingItem')}>\n                                <img src=\"/images/alliances100.svg\" alt=\"alliances\" />\n                                <span className={usingClasses(classes, 'connectingTitle')}>\n                                    <FormattedMessage\n                                        id=\"connecting_item_1\"\n                                        defaultMessage={'Game alliances'}\n                                    />\n                                </span>\n                            </div>\n                            <div className={usingClasses(classes, 'connectingItem')}>\n                                <img src=\"/images/ownership100.svg\" alt=\"ownership\" />\n                                <span className={usingClasses(classes, 'connectingTitle')}>\n                                    <FormattedMessage\n                                        id=\"connecting_item_2\"\n                                        defaultMessage={'Ownership'}\n                                    />\n                                </span>\n                            </div>\n                            <div className={usingClasses(classes, 'connectingItem')}>\n                                <img src=\"/images/freedom.svg\" alt=\"freedom\" />\n                                <span className={usingClasses(classes, 'connectingTitle')}>\n                                    <FormattedMessage\n                                        id=\"connecting_item_3\"\n                                        defaultMessage={'Gaming freedom'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} alliance`} onClick={this.closeBookmark}>\n                    <div id=\"alliance\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"alliance_title\"\n                                defaultMessage={'Alliance of Developers'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"alliance_message_1\"\n                                defaultMessage={'The idea is to bring together groups of remarkable developers, see if they could become something greater, to work together and compete with the bigger developers.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"alliance_message_2\"\n                                defaultMessage={'While it may be unreasonable to expect smaller developers to reliably produce games that can directly compete with AAA games, having a series of interconnected games where data can be shared will open the door for new ways to play games.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"alliance_message_3\"\n                                defaultMessage={'Agora enables the sharing of virtual assets among games, whether it may be items, equipment, or other content. With a way to provide data to one another, partnered games simply need to decide how to interpret each others’ data.'}\n                            />\n                        </span>\n                        <img src=\"/images/alliance_ill.png\" alt=\"alliance_ill\" className={usingClasses(classes, 'illImg')} />\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} ownership`} onClick={this.closeBookmark}>\n                    <div id=\"ownership\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"ownership_title\"\n                                defaultMessage={'Asset Ownership'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"ownership_message_1\"\n                                defaultMessage={'Ownership in most online games can be considered as virtual as the virtual assets themselves. Players own the assets as long as the games’ servers are alive. Which means once the developers decide that it’s not worth keeping the servers alive and shut them down, the players lose all the assets that they’ve spent money to acquire.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"ownership_message_2\"\n                                defaultMessage={'With Agora, the data is stored on a blockchain instead, which means players would continue to possess the data even after the servers stop running. Players would be able to continue to use that data in other supported games, and also if a developer decides to revive the original game.'}\n                            />\n                        </span>\n                        <img src=\"/images/ownership_ill.png\" alt=\"ownership_ill\" className={usingClasses(classes, 'illImg')} />\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} freedom`} onClick={this.closeBookmark}>\n                    <div id=\"freedom\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"freedom_title\"\n                                defaultMessage={'Gaming Freedom'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"freedom_message_1\"\n                                defaultMessage={'It’s natural for developers to design games in a way that encourages players to keep playing and come back with mechanics such as daily quests and limit time events.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"freedom_message_2\"\n                                defaultMessage={'On the flip side, this means players run the risk of losing rewards when they take a break and switch games. Without the chance to try new things, players can start feeling trapped, and the game can end up feeling more like work than fun.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"freedom_message_3\"\n                                defaultMessage={'Agora provides the potential for players to continue to earn rewards for a certain game even when playing a different partnered game, allowing players to freely try new games. This helps keep the experience fresh and enjoyment for players, as well as encouraging players to spend.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"freedom_message_4\"\n                                defaultMessage={'Typically, convincing a player to spend money on an online game meant convincing them that this game is and will stay fun, and will survive for the foreseeable future.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"freedom_message_5\"\n                                defaultMessage={'With Agora, these risks would be mitigated as long as there are other partner games using the data.'}\n                            />\n                        </span>\n                        <img src=\"/images/freedom_ill.png\" alt=\"freedom_ill\" className={usingClasses(classes, 'illImg')} />\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} technology`} onClick={this.closeBookmark}>\n                    <div id=\"technology\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"technology_title\"\n                                defaultMessage={'Technology'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"technology_message_1\"\n                                defaultMessage={'Agora will be a proprietary blockchain using Proof-of-Stake consensus that connects to the Cosmos Network. As a custom chain, the logic to create, trade, and sell virtual assets will be embedded into the chain itself.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyText')}>\n                            <FormattedMessage\n                                id=\"technology_message_2\"\n                                defaultMessage={'We will be providing interfaces for both developers and gamers to ensure a smooth experience:'}\n                            />\n                        </span>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/sdk.svg\" alt=\"sdk\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"technology_sdk_title\"\n                                        defaultMessage={'SDK'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"technology_sdk_message\"\n                                        defaultMessage={'We will be providing an SDK for game developers to easily connect their game to Agora. Using the SDK, games can mint, sell, and retrieve virtual assets for players. Developers will be able to control which and how assets can be used in their games.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/wallet.svg\" alt=\"wallet\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"technology_wallet_title\"\n                                        defaultMessage={'Wallet'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"technology_wallet_message\"\n                                        defaultMessage={'Users will be able to view their possessions, send and receive assets via the wallet, which will have both browser and mobile based versions.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/auction.svg\" alt=\"auction\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"technology_auction_title\"\n                                        defaultMessage={'Auction Platform'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"technology_auction_message\"\n                                        defaultMessage={'An auction website, similar to eBay, will provide a convenient way for players to advertise and sell their assets for a fair value.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} community`} onClick={this.closeBookmark}>\n                    <div id=\"community\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"community_title\"\n                                defaultMessage={'Community'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyText')}>\n                            <FormattedMessage\n                                id=\"community_message\"\n                                defaultMessage={'There will be multiple ways to participate in Agora. Below are some roles, and are not mutually exclusive.'}\n                            />\n                        </span>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/validators.svg\" alt=\"validators\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"community_validators_title\"\n                                        defaultMessage={'Validators'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"community_validators_message\"\n                                        defaultMessage={'Validators help secure the network through staking and participating in consensus with other validators.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/developers.svg\" alt=\"developers\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"community_developers_title\"\n                                        defaultMessage={'Developers'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"community_developers_message\"\n                                        defaultMessage={'Developers help create content through the minting and selling of virtual assets.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/gamers.svg\" alt=\"gamers\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"community_gamers_title\"\n                                        defaultMessage={'Gamers'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"community_gamers_message\"\n                                        defaultMessage={'Gamers can buy and trade assets on Agora.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'block')}>\n                            <div className={usingClasses(classes, 'blockHead')}>\n                                <img src=\"/images/coders.svg\" alt=\"coders\" />\n                            </div>\n                            <div className={usingClasses(classes, 'blockBody')}>\n                                <span className={usingClasses(classes, 'blockTitle')}>\n                                    <FormattedMessage\n                                        id=\"community_coders_title\"\n                                        defaultMessage={'Coders'}\n                                    />\n                                </span>\n                                <span className={usingClasses(classes, 'bodyText')}>\n                                    <FormattedMessage\n                                        id=\"community_coders_message\"\n                                        defaultMessage={'We intend to make Agora’s code base open source, allowing everyone to contribute.'}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} revenue`} onClick={this.closeBookmark}>\n                    <div id=\"revenue\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"revenue_title\"\n                                defaultMessage={'Revenue Model'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"revenue_message_1\"\n                                defaultMessage={'We estimate that we will likely be making most of our revenue via the auction website, which we will receive a small percentage from every auction on the site.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"revenue_message_2\"\n                                defaultMessage={'While we also do intend to mint our own assets on the sites and sell them, they will likely serve more of a role to jumpstart the ecosystem. Likewise, the chain will collect a small fee from transactions on the chain, but those are values mainly for discouraging spam and abuse.'}\n                            />\n                        </span>\n                        <img src=\"/images/revenue_ill.png\" alt=\"revenue_ill\" className={usingClasses(classes, 'illImg')} />\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} roadmap`} onClick={this.closeBookmark}>\n                    <div id=\"roadmap\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <span className={usingClasses(classes, 'smallTitleText')}>\n                            <FormattedMessage\n                                id=\"roadmap_title\"\n                                defaultMessage={'Roadmap'}\n                            />\n                        </span>\n                        <div className={usingClasses(classes, 'roadmapList')}>\n                            <div className={usingClasses(classes, 'roadmapBlock')}>\n                                <div className={usingClasses(classes, 'roadmapBlockHead')}>\n                                    <img src=\"/images/pos.svg\" alt=\"proof of stake\" />\n                                </div>\n                                <div className={usingClasses(classes, 'roadmapBlockBody')}>\n                                    <span className={usingClasses(classes, 'roadmapBlockTitle')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_pos_title\"\n                                            defaultMessage={'Proof of Stake chain implementation'}\n                                        />\n                                    </span>\n                                    <span className={usingClasses(classes, 'roadmapBlockMessage')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_pos_message\"\n                                            defaultMessage={'This is the actual implementation of the chain itself.'}\n                                        />\n                                    </span>\n                                </div>\n                            </div>\n                            <div className={usingClasses(classes, 'roadmapBlock')}>\n                                <div className={usingClasses(classes, 'roadmapBlockHead')}>\n                                    <img src=\"/images/testnet.svg\" alt=\"Testnet\" />\n                                </div>\n                                <div className={usingClasses(classes, 'roadmapBlockBody')}>\n                                    <span className={usingClasses(classes, 'roadmapBlockTitle')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_testnet_title\"\n                                            defaultMessage={'Testnet Launch'}\n                                        />\n                                    </span>\n                                    <span className={usingClasses(classes, 'roadmapBlockMessage')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_testnet_message\"\n                                            defaultMessage={'While we do intend to launch testnet with a version of a mobile wallet and auction website, they will be far from complete. They will act as a springboard for potential partners to imagine what the release product may look like, and for us to receive feedback and feature requests.'}\n                                        />\n                                    </span>\n                                </div>\n                            </div>\n                            <div className={usingClasses(classes, 'roadmapBlock')}>\n                                <div className={usingClasses(classes, 'roadmapBlockHead')}>\n                                    <img src=\"/images/gameSdk.svg\" alt=\"Game SDK\" />\n                                </div>\n                                <div className={usingClasses(classes, 'roadmapBlockBody')}>\n                                    <span className={usingClasses(classes, 'roadmapBlockTitle')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_gameSdk_title\"\n                                            defaultMessage={'Game Developer SDK'}\n                                        />\n                                    </span>\n                                    <span className={usingClasses(classes, 'roadmapBlockMessage')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_gameSdk_message\"\n                                            defaultMessage={'An SDK for developers to connect their games, enabling them to generate and retrieve assets that their game supports.'}\n                                        />\n                                    </span>\n                                </div>\n                            </div>\n                            <div className={usingClasses(classes, 'roadmapBlock')}>\n                                <div className={usingClasses(classes, 'roadmapBlockHead')}>\n                                    <img src=\"/images/explorer.svg\" alt=\"chain explorer\" />\n                                </div>\n                                <div className={usingClasses(classes, 'roadmapBlockBody')}>\n                                    <span className={usingClasses(classes, 'roadmapBlockTitle')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_explorer_title\"\n                                            defaultMessage={'Chain Explorer'}\n                                        />\n                                    </span>\n                                    <span className={usingClasses(classes, 'roadmapBlockMessage')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_explorer_message\"\n                                            defaultMessage={'An interface for whoever may be interested in monitoring the health of the chain.'}\n                                        />\n                                    </span>\n                                </div>\n                            </div>\n                            <div className={usingClasses(classes, 'roadmapBlock')}>\n                                <div className={usingClasses(classes, 'roadmapBlockHead')}>\n                                    <img src=\"/images/wallet100.svg\" alt=\"wallet\" />\n                                </div>\n                                <div className={usingClasses(classes, 'roadmapBlockBody')}>\n                                    <span className={usingClasses(classes, 'roadmapBlockTitle')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_wallet_title\"\n                                            defaultMessage={'Mobile Wallet'}\n                                        />\n                                    </span>\n                                    <span className={usingClasses(classes, 'roadmapBlockMessage')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_wallet_message\"\n                                            defaultMessage={'The wallet provides an interface for users to view and send assets, and sign transactions for Agora.'}\n                                        />\n                                    </span>\n                                </div>\n                            </div>\n                            <div className={usingClasses(classes, 'roadmapBlock')}>\n                                <div className={usingClasses(classes, 'roadmapBlockHead')}>\n                                    <img src=\"/images/economic.svg\" alt=\"economic model\" />\n                                </div>\n                                <div className={usingClasses(classes, 'roadmapBlockBody')}>\n                                    <span className={usingClasses(classes, 'roadmapBlockTitle')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_economic_title\"\n                                            defaultMessage={'Economic Model'}\n                                        />\n                                    </span>\n                                    <span className={usingClasses(classes, 'roadmapBlockMessage')}>\n                                        <FormattedMessage\n                                            id=\"roadmap_economic_message\"\n                                            defaultMessage={'We anticipate great feedback and iterations to polish economic model.'}\n                                        />\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className={`${usingClasses(classes, 'section')} about`} onClick={this.closeBookmark}>\n                    <div id=\"about\" className={usingClasses(classes, 'anchor')} />\n                    <div className={usingClasses(classes, 'container')}>\n                        <div className={usingClasses(classes, 'aboutTitle')}>\n                            <img src=\"/images/logo.png\" alt=\"logo\" className={usingClasses(classes, 'aboutLogo')} />\n                            <span className={usingClasses(classes, 'titleText')}>\n                                <FormattedMessage\n                                    id=\"about_aetheras_title\"\n                                    defaultMessage={'About Aetheras'}\n                                />\n                            </span>\n                        </div>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"about_aetheras_message_1\"\n                                defaultMessage={'As software developers, we aim to create software to improve lives, whether through solving problems, providing entertainment, or both. We believe that blockchain technology offers the world huge opportunities for innovation with its ability to promote transparency and fairness.'}\n                            />\n                        </span>\n                        <span className={usingClasses(classes, 'bodyParagraph')}>\n                            <FormattedMessage\n                                id=\"about_aetheras_message_2\"\n                                defaultMessage={'For discussions, join us on our Discord channel:'}\n                            />\n                        </span>\n                        <a href={CONST.discordURL} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img src=\"/images/discord.svg\" alt=\"discord_ill\" className={usingClasses(classes, 'illImg')} />\n                        </a>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n};\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    section: Object.assign({ ...SHARED_STYLES.section }, {\n        paddingTop: '60px !important',\n        paddingBottom: '60px !important'\n    }),\n    container: Object.assign({ ...SHARED_STYLES.container }, {\n        margin: '0 0 0 285px',\n        maxWidth: 'calc(1180px - 285px)',\n        alignItems: 'flex-start',\n        zIndex: 2,\n    }),\n    anchor: Object.assign({ ...SHARED_STYLES.anchor }, {\n        top: '-80px'\n    }),\n    bookmarkOverlay: {\n        position: 'absolute',\n        width: '100vw',\n    },\n    bookmarkContainer: {\n        width: '100%',\n        height: '100%',\n        maxWidth: 'calc(1180px + 20%)',\n        padding: '0 10%',\n        margin: '0 auto',\n        position: 'static'\n    },\n    bookmark: {\n        position: 'fixed',\n        zIndex: 998,\n        top: '140px',\n        width: '236px',\n        display: 'flex',\n        boxShadow: '0 10px 30px 0 rgba(255, 125, 47, 0.1)',\n    },\n    bookmarkScrollbar: {\n        width: '4px',\n        background: 'rgba(255, 125, 47, 0.3)'\n    },\n    scrollbar: {\n        background: STYLES_CONST.primaryColor,\n        width: '4px',\n        maxHeight: '100%',\n        transition: 'all 0.3s'\n    },\n    bookmarkPaper: {\n        padding: '20px 28px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        boxShadow: 'unset',\n        borderRadius: '0 8px 8px 0'\n    },\n    bookmarkLink: {\n        padding: '0',\n        fontSize: '12px',\n        color: STYLES_CONST.fontColor,\n        opacity: '0.3',\n        transition: 'all 0.3s',\n        textTransform: 'unset',\n        textAlign: 'left',\n        '&:hover': {\n            background: 'unset'\n        },\n        '&.active': {\n            opacity: '1'\n        },\n        '&:not(:last-child)': {\n            marginBottom: '12px'\n        }\n    },\n    subBookmarkLink: {\n        padding: '0 0 0 36px',\n        fontSize: '12px',\n        color: STYLES_CONST.fontColor,\n        opacity: '0.3',\n        transition: 'all 0.3s',\n        textTransform: 'unset',\n        textAlign: 'left',\n        '&:hover': {\n            background: 'unset'\n        },\n        '&.active': {\n            opacity: '1'\n        },\n        '&:not(:last-child)': {\n            marginBottom: '12px'\n        }\n    },\n    bookmarkTrigger: {\n        display: 'none',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        width: '324px',\n        minWidth: '324px',\n        height: '48px',\n        position: 'absolute',\n        left: '0',\n        transform: 'translateX(-300px)',\n        transition: 'all 0.3s',\n        '&.active': {\n            transform: 'translateX(0)',\n            paddingRight: '24px'\n        }\n    },\n    trigger: {\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '24px',\n        minWidth: '24px',\n        height: '48px',\n        padding: 0,\n        zIndex: 998,\n        background: 'rgba(255, 125, 47, 0.16)',\n        borderRadius: '0 8px 8px 0',\n        color: STYLES_CONST.primaryColor,\n        '&.active': {\n            borderRadius: '8px 0 0 8px',\n            '& svg': {\n                transform: 'rotate(180deg)'\n            }\n        },\n        '& svg': {\n            transition: 'all 0.3s'\n        }\n    },\n    titleText: Object.assign({ ...SHARED_STYLES.titleText }, {\n        fontSize: '32px',\n        marginBottom: '30px'\n    }),\n    smallTitleText: Object.assign({ ...SHARED_STYLES.titleText }, {\n        fontSize: '24px',\n        lineHeight: '36px',\n        marginBottom: '30px'\n    }),\n    paragraph: Object.assign({ ...SHARED_STYLES.paragraph }, {\n        textAlign: 'left',\n        fontSize: '20px',\n        lineHeight: '30px'\n    }),\n    subParagraph: Object.assign({ ...SHARED_STYLES.paragraph }, {\n        textAlign: 'left',\n        fontSize: '20px',\n        lineHeight: '30px',\n        marginBottom: '0'\n    }),\n    memo: Object.assign({ ...SHARED_STYLES.paragraph }, {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'left',\n        fontSize: '13px',\n        lineHeight: '20px',\n        paddingLeft: '12px',\n        borderLeft: '1px solid rgba(76, 73, 72, 0.8)',\n        color: 'rgba(76, 73, 72, 0.7)',\n        maxWidth: '100%',\n        overflowWrap: 'break-word'\n    }),\n    bodyText: Object.assign({ ...SHARED_STYLES.bodyText }, {\n        lineHeight: '28px'\n    }),\n    block: {\n        display: 'flex',\n        marginTop: '38px'\n    },\n    blockHead: {\n        height: '64px',\n        width: '64px',\n        margin: '0 20px 20px 0',\n        '& img': {\n            height: '64px',\n            width: '64px'\n        }\n    },\n    blockBody: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start'\n    },\n    blockTitle: {\n        fontSize: '16px',\n        fontWeight: '700',\n        color: STYLES_CONST.primaryColor,\n        marginBottom: '12px'\n    },\n    connectingList: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '40px'\n    },\n    connectingItem: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    connectingTitle: {\n        fontSize: '20px',\n        fontWeight: '600',\n        color: STYLES_CONST.primaryColor\n    },\n    bodyParagraph: Object.assign({ ...SHARED_STYLES.bodyText }, {\n        lineHeight: '28px',\n        marginBottom: '28px'\n    }),\n    roadmapBlock: {\n        display: 'flex',\n        paddingBottom: '30px',\n        position: 'relative',\n        '&:not(:last-of-type):before': {\n            content: \"''\",\n            position: 'absolute',\n            top: '36px',\n            left: '125px',\n            width: '2px',\n            height: 'calc(100% - 12px)',\n            background: STYLES_CONST.primaryColor\n        },\n        '&:after': {\n            content: \"''\",\n            position: 'absolute',\n            top: '24px',\n            left: '120px',\n            width: '12px',\n            height: '12px',\n            border: `2px solid ${STYLES_CONST.primaryColor}`,\n            borderRadius: '50%'\n        }\n    },\n    roadmapBlockHead: {\n        display: 'flex',\n        width: '100px',\n        height: '100px'\n    },\n    roadmapBlockBody: {\n        marginTop: '20px',\n        marginLeft: '50px',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    roadmapBlockTitle: {\n        fontSize: '16px',\n        fontWeight: '700',\n        color: STYLES_CONST.primaryColor,\n        marginBottom: '12px'\n    },\n    roadmapBlockMessage: {\n        fontSize: '14px',\n        fontWeight: '500',\n        lineHeight: '23px'\n    },\n    aboutTitle: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    aboutLogo: {\n        width: '64px',\n        height: '64px',\n        marginRight: '12px',\n        marginBottom: '30px'\n    }\n})\n\nexport default withStyles(styles)(injectIntl(Whitepaper));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nconst NotFound = props => {\n    const { classes } = props;\n    return (\n        <div className={usingClasses(classes, 'notFound')}>\n            <section className={usingClasses(classes, 'section')}>\n                <span className={usingClasses(classes, 'titleText')}>\n                    <FormattedMessage\n                        id=\"not_found_title\"\n                        defaultMessage={'Page Not Found'}\n                    />\n                </span>\n                    <p className={usingClasses(classes, 'paragraph')}>\n                        <FormattedMessage\n                            id=\"not_found_message\"\n                            defaultMessage={'The page you visited either does not exist or has been moved in a website reshuffle.'}\n                        />\n                    </p>\n                    <Button variant=\"contained\" color=\"primary\" className={usingClasses(classes, 'button')}>\n                        <Link to=\"/\" className={usingClasses(classes, 'buttonLink')}>\n                            <FormattedMessage\n                                id=\"home_button\"\n                                defaultMessage={'Home'}\n                            />                            \n                        </Link>\n                    </Button>\n            </section>\n        </div>\n    );\n}\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    notFound: Object.assign({ ...SHARED_STYLES.wrapper }, {\n        background: 'url(\"/images/background.png\") 50% center'\n    }),\n    section: Object.assign({ ...SHARED_STYLES.section }, {\n        flexDirection: 'column'\n    }),\n    paragraph: Object.assign({...SHARED_STYLES.paragraph}, {\n        marginBottom: '72px'\n    })\n})\n\nexport default withStyles(styles)(injectIntl(NotFound))\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Button from '@material-ui/core/Button';\nimport { STYLES_CONST, SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n// import KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IntlComponent from './shared/IntlComponent';\n\nconst link = [\n    {\n        titleId: 'about_nav_title',\n        defaultTitle: 'About',\n        path: '/about'\n    },\n    {\n        titleId: 'white_paper_title',\n        defaultTitle: 'Agora',\n        path: '/agora'\n    },\n    {\n        titleId: 'testnet_title',\n        defaultTitle: 'Testnet',\n        path: 'https://explore.aetheras.io/',\n        external: true\n    },\n    {\n        titleId: 'developer_title',\n        defaultTitle: 'Developers',\n        path: 'https://developers.aetheras.io/',\n        external: true\n    },\n    // {\n    //     titleId: 'auction_title',\n    //     defaultTitle: 'Agora Auctions',\n    //     path: 'https://auctions.aetheras.io/',\n    //     external: true\n    // },\n    // {\n    //     titleId: 'career_title',\n    //     defaultTitle: 'Career',\n    //     path: '/career'\n    // }\n]\n\nclass Navbar extends IntlComponent {\n    state = {\n        isNavMenuOpen: false,\n        localeMenuAnchor: null\n    };\n\n    toggleNavMenu = () => {\n        this.setState(prevState =>  {return { isNavMenuOpen: !prevState.isNavMenuOpen }});\n    }\n\n    closeNavMenu = () => {\n        this.setState({ isNavMenuOpen: false });\n    }\n\n    openLocaleMenu = event => {\n        this.setState({ localeMenuAnchor: event.currentTarget });\n    };\n\n    selectLocale = code => e => {\n        this.closeNavMenu();\n        this.closeLocaleMenu();\n\n        const { setLocale, locale } = this.props;\n        if (setLocale) {\n            const currentLocale = locale.find(l => l.code === code);\n            setLocale(currentLocale);\n        }\n    }\n\n    closeLocaleMenu = () => {\n        this.setState({ localeMenuAnchor: null });\n    };\n\n    getLinkDOM = (linkList, classes, type) => {\n        const pathname = window.location.pathname;\n        if (!linkList || linkList.length === 0) {\n            return null;\n        }\n        if (type === 'desktop') {            \n            return linkList.map(link => (\n                link.external === true\n                ?\n                <a key={link.titleId} href={link.path} className={usingClasses(classes, 'linkText') + (pathname === link.path ? ' active' : '')} target={link.target}>                        \n                    <FormattedMessage\n                        id={link.titleId}\n                        defaultMessage={link.defaultTitle}\n                    />\n                </a>\n                :\n                <Link key={link.titleId} to={{ pathname: link.path, state: { shouldScroll: true }}} className={usingClasses(classes, 'linkText') + (pathname === link.path ? ' active' : '')}>\n                    <FormattedMessage\n                        id={link.titleId}\n                        defaultMessage={link.defaultTitle}\n                    />\n                </Link>\n            ));                            \n        }\n        if (type === 'mobile') {\n            return linkList.map(link => (\n                <MenuItem\n                    onClick={this.closeNavMenu}\n                    className={usingClasses(classes, 'mobileMenuLink')}\n                    key={link.titleId}\n                >\n                    {link.external === true\n                    ?\n                    <a key={link.titleId} href={link.path} className={usingClasses(classes, 'mobileLinkText')} target={link.target}>                        \n                        <FormattedMessage\n                            id={link.titleId}\n                            defaultMessage={link.defaultTitle}\n                        />\n                    </a>\n                    :\n                    <Link to={{ pathname: link.path, state: { shouldScroll: true }}} className={usingClasses(classes, 'mobileLinkText')}>\n                        <FormattedMessage\n                            id={link.titleId}\n                            defaultMessage={link.defaultTitle}\n                        />\n                    </Link>}\n                </MenuItem>\n            ));\n        }\n        return null;\n    }\n\n    render() {\n        // const { classes, intl, locale } = this.props;\n        const { classes, locale } = this.props;\n        const { isNavMenuOpen, localeMenuAnchor } = this.state;\n        const isLocaleMenuOpen = Boolean(localeMenuAnchor);\n        // const currentLocale = locale.find(l => l.locale === intl.locale);\n        const linkDOM = this.getLinkDOM(link, classes, 'desktop');\n        const mobileLinkDOM = this.getLinkDOM(link, classes, 'mobile');\n        const anchorEl = document.getElementsByClassName('MuiAppBar-root')[0] || document.getElementById('root');\n        return (\n            <React.Fragment>\n                <AppBar position=\"absolute\" className={usingClasses(classes, 'navbar')}>\n                    <Toolbar className={usingClasses(classes, 'toolbar')}>\n                        <div className={usingClasses(classes, 'nav')}>\n                            <Link to={{ pathname: '/', state: { shouldScroll: true } }} className={usingClasses(classes, 'logoLink')}>\n                                <img\n                                    src=\"/images/aetheras-logo-standard.png\"\n                                    alt=\"Logo\"\n                                />\n                            </Link>\n                            <div className={usingClasses(classes, 'linkContainer')}>\n                                {linkDOM}\n                                {/* <Button className={usingClasses(classes, 'localeButton') + (isLocaleMenuOpen ? ' active' : '')} onClick={this.openLocaleMenu}>\n                                    <span className={usingClasses(classes, 'bodyText')}>{currentLocale.shortDisplay}</span>\n                                    <KeyboardArrowDown className={usingClasses(classes, 'localeIcon') + (isLocaleMenuOpen ? ' active' : '')} />\n                                </Button> */}\n                            </div>\n                        </div>\n                        <div className={usingClasses(classes, 'mobileNav')}>\n                            <IconButton\n                                className={usingClasses(classes, 'menuButton') + ' hamburger--squeeze' + (isNavMenuOpen ? ' is-active' : '')}\n                                color=\"primary\"\n                                onClick={this.toggleNavMenu}\n                            >\n                                <span className=\"hamburger-box\">\n                                    <span className=\"hamburger-inner\"></span>\n                                </span>\n                            </IconButton>\n                            <Link\n                                to={{ pathname: '/', state: { shouldScroll: true } }}\n                                className={usingClasses(classes, 'mobileLogoLink')}\n                                onClick={this.closeNavMenu}\n                            >\n                                <img\n                                    src=\"/images/aetheras-logo-standard.png\"\n                                    alt=\"Logo\"\n                                    className={usingClasses(classes, 'mobileLogoImg')}\n                                />\n                            </Link>\n                            <div></div>\n                            {/* <Button className={usingClasses(classes, 'localeButton') + (isLocaleMenuOpen ? ' active' : '')} onClick={this.openLocaleMenu}>\n                                <span className={usingClasses(classes, 'bodyText')}>{currentLocale.shortDisplay}</span>\n                                <KeyboardArrowDown className={usingClasses(classes, 'localeIcon') + (isLocaleMenuOpen ? ' active' : '')} />\n                            </Button> */}\n                        </div>\n\n                    </Toolbar>\n                </AppBar>\n                <Menu\n                    anchorEl={anchorEl}\n                    open={isNavMenuOpen}\n                    onClose={this.closeNavMenu}\n                    disableAutoFocusItem={true}\n                    className={usingClasses(classes, 'mobileMenu')}\n                    classes={{ paper: usingClasses(classes, 'mobileMenuPaper') }}\n                    MenuListProps={{ disablePadding: true }}\n                >\n                    {mobileLinkDOM}\n                </Menu>\n                <Menu\n                    anchorEl={anchorEl}\n                    open={isLocaleMenuOpen}\n                    onClose={this.closeLocaleMenu}\n                    className={usingClasses(classes, 'localeMenu')}\n                    classes={{ paper: usingClasses(classes, 'localeMenuPaper') }}\n                    disableAutoFocusItem={true}\n                    MenuListProps={{ disablePadding: true }}\n                >\n                    <MenuItem className={usingClasses(classes, 'localeMenuTitle')} disabled>\n                        <FormattedMessage\n                            id=\"select_language\"\n                            defaultMessage=\"Select a Language\"\n                        />\n                    </MenuItem>\n                    {locale.map(l => (\n                        <MenuItem onClick={this.selectLocale(l.code)} key={l.code} className={usingClasses(classes, 'localeMenuItem')}>\n                            <span className={usingClasses(classes, 'bodyText')}>{l.display}</span>\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </React.Fragment >\n        );\n    }\n};\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    navbar: {\n        height: STYLES_CONST.navHeight,\n        color: STYLES_CONST.fontColor,\n        backgroundColor: '#fff',\n        borderBottom: '1px solid rgba(76, 73, 72, 0.1)',\n        boxShadow: 'none',\n        position: 'fixed'\n    },\n    toolbar: {\n        height: '100%',\n        minHeight: '60px',\n        padding: '0',\n    },\n    nav: {\n        width: '100%',\n        padding: '0 10%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        maxWidth: 'calc(1180px + 20%)',\n        margin: '0 auto'\n    },\n    mobileNav: {\n        display: 'none',\n        width: '100%',\n        height: '100%',\n        padding: '0 20px',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    logoLink: {\n        height: '36px',\n    },\n    mobileLogoLink: {\n        height: '24px',\n    },\n    mobileLogoImg: {\n        height: '24px'\n    },\n    linkText: {\n        height: STYLES_CONST.navHeight,\n        lineHeight: STYLES_CONST.navHeight,\n        fontSize: '14px',\n        fontWeight: '500',\n        textDecoration: 'unset',\n        letterSpacing: `${STYLES_CONST.letterSpacing * 2}px`,\n        display: 'inline-flex',\n        boxSizing: 'border-box',\n        transition: 'all 0.3s',\n        '&:hover': {\n            color: STYLES_CONST.primaryColor\n        },\n        '&.active': {\n            borderBottom: `8px solid ${STYLES_CONST.primaryColor}`\n        },\n        '&:not(:last-of-type)': {\n            marginRight: '36px'\n        }\n    },\n    linkContainer: {\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center'\n    },\n    mobileMenu: {\n        top: '60px !important'\n    },\n    mobileMenuPaper: {\n        top: '0 !important',\n        left: '0 !important',\n        width: '100%',\n        maxWidth: '100%',\n        boxShadow: 'rgba(255, 77, 77, 0.2) 0px 10px 10px -5px',\n        paddingTop: '20px',\n        paddingBottom: '20px'\n    },\n    mobileMenuLink: {\n        height: 'fit-content',\n        padding: '0',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: STYLES_CONST.fontColor,\n        transition: 'all 0.3s',\n        '&:hover': {\n            backgroundColor: 'unset',\n            color: STYLES_CONST.primaryColor\n        }\n    },\n    mobileLinkText: {\n        fontSize: '16px',\n        fontWeight: '500',\n        textDecoration: 'unset',\n        letterSpacing: `${STYLES_CONST.letterSpacing}px`,\n        width: '100%',\n        textAlign: 'center',\n        padding: '12px 0'\n    },\n    menuButton: {\n        padding: '0',\n        '&:hover': {\n            backgroundColor: 'unset'\n        }\n    },\n    localeButton: Object.assign({ ...SHARED_STYLES.flatButton }, {\n        padding: '0',\n        fontSize: '16px',\n        minWidth: '48px',\n        marginLeft: '36px',\n        color: STYLES_CONST.fontColor\n    }),\n    localeIcon: {\n        fontSize: '18px',\n        width: '24px',\n        height: '24px',\n        color: STYLES_CONST.primaryColor,\n        transition: 'all 0.3s',\n        '&.active': {\n            transform: 'rotate(-180deg)'\n        }\n    },\n    localeMenuPaper: {\n        top: `${STYLES_CONST.navHeight} !important`,\n        left: 'unset !important',\n        right: 'calc(10% + 6px) !important',\n        width: '247px',\n        boxShadow: 'rgba(255, 77, 77, 0.2) 0px 10px 30px 0px'\n    },\n    localeMenuList: {\n        padding: '16px 0'\n    },\n\n    localeMenuTitle: {\n        padding: '16px 32px',\n        margin: '16px 0 8px 0',\n        color: STYLES_CONST.secondaryColor,\n        fontSize: '16px',\n        fontWeight: '700',\n        opacity: '1 !important',\n        '&:hover': {\n            backgroundColor: 'unset',\n        }\n    },\n    localeMenuItem: {\n        padding: '16px 32px',\n        color: STYLES_CONST.fontColor,\n        transition: 'all 0.3s',\n        '&:hover': {\n            backgroundColor: 'unset',\n            color: STYLES_CONST.primaryColor\n        },\n        '&:last-child': {\n            marginBottom: '16px'\n        }\n    },\n    bodyText: Object.assign({ ...SHARED_STYLES.bodyText }, {\n        fontWeight: '500'\n    })\n});\n\nexport default withStyles(styles)(injectIntl(Navbar));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport { STYLES_CONST, SHARED_STYLES } from \"../utils/shared-styles\";\nimport { usingClasses } from \"../utils/utils\";\nimport { Link } from 'react-router-dom';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport CONST from '../utils/const';\n\nconst Footer = props => {\n    const { classes } = props;\n    return (\n        <footer className={usingClasses(classes, 'footer')}>\n            <div>\n                <div className={usingClasses(classes, 'link')}>\n                    <Link to={{ pathname: '/', state: { shouldScroll: true } }} className={usingClasses(classes, 'logoLink')}>\n                        <img src=\"/images/aetheras-logo-standard-w-text.png\" alt=\"logo\" />\n                    </Link>\n                    <a href={CONST.githubURL} className={usingClasses(classes, 'linkIcon')} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src=\"/images/social-icon_git.svg\" alt=\"github-icon\" />\n                    </a>\n                    <a href={CONST.twitterURL} className={usingClasses(classes, 'linkIcon')} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src=\"/images/social-icon_twt.svg\" alt=\"twitter-icon\" />\n                    </a>\n                    <a href={CONST.discordURL} className={usingClasses(classes, 'linkIcon')} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src=\"/images/social-icon_dcd.svg\" alt=\"discord-icon\" />\n                    </a>\n                </div>\n                <div className={usingClasses(classes, 'copyright')}>\n                    <span className={usingClasses(classes, 'copyrightText')}>Copyright © 2019 Heimdal Holdings Corp. All rights reserved | </span>\n                    <a href={CONST.contactMail} className={usingClasses(classes, 'contactLink')}>\n                        <FormattedMessage \n                        id=\"contact\"\n                        defaultMessage=\"Contact\"\n                        />\n                    </a>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nconst styles = Object.assign({ ...SHARED_STYLES }, {\n    footer: {\n        height: STYLES_CONST.footerHeight,\n        width: '100%',\n        padding: '0 10%',\n        color: 'white',\n        backgroundColor: '#4C4948',\n        position: 'absolute',\n        bottom: '0',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    link: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '60px'\n    },\n    logoLink: {\n        marginRight: '56px'\n    },\n    linkIcon: {\n        opacity: '0.6',\n        transition: 'all 0.3s',\n        '&:hover': {\n            opacity: '1'\n        },\n        '&:not(:last-child)': {\n            marginRight: '16px'\n        }\n    },\n    copyrightText: Object.assign({...SHARED_STYLES.bodyText}, {\n        opacity: '0.6'\n    }),\n    contactLink: {\n        fontWeight: '700'\n    }\n});\n\nexport default withStyles(styles)(injectIntl(Footer));\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport zh from 'react-intl/locale-data/zh';\nimport en from 'react-intl/locale-data/en';\nimport localeConfig from './i18n/locale-config';\nimport ReactGA from 'react-ga';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { STYLES_CONST } from './utils/shared-styles';\nimport ScrollToRoute from './components/shared/ScrollToRoute';\nimport IntlComponent from './components/shared/IntlComponent';\nimport GoogleAnalytics from './components/shared/Google-Analytics';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Whitepaper from './components/Whitepaper';\nimport NotFound from './components/NotFound';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport { debounce } from './utils/utils';\nimport { Button } from '@material-ui/core';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport 'hamburgers/dist/hamburgers.min.css';\nimport './styles/app.css';\nimport CONST from './utils/const';\n\naddLocaleData([...en, ...zh]);\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: STYLES_CONST.primaryColor,\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: STYLES_CONST.secondaryColor,\n            contrastText: '#fff',\n        },\n    },\n    typography: {\n        fontFamily: [\n            'Montserrat',\n            '-apple-system',\n            'Roboto',\n            'sans-serif',\n        ].join(','),\n    },\n});\n\n\nclass App extends IntlComponent {\n    constructor(props) {\n        super(props);\n        // const browserLanguage = (navigator.language || navigator.browserLanguage).toLowerCase();\n        // this.defaultLocale = (localeConfig.find(l => l.languageCode === browserLanguage || l.locale === browserLanguage) || localeConfig[0]);\n        this.defaultLocale = localeConfig.find(l => l.languageCode === 'en-us');\n        this.state = {\n            network: 'Loading...',\n            currentLocale: this.defaultLocale,\n            showToTopButton: false\n        };\n        ReactGA.initialize(CONST.googleAnalyticsID);\n    }\n\n    setLocale = (locale) => {\n        this.setState({ currentLocale: locale });\n    }\n\n    componentDidMount() {\n        const { currentLocale } = this.state;\n        if (currentLocale) {\n            this.loadLocaleData({\n                intl: {\n                    locale: currentLocale.locale,\n                    defaultLocale: this.defaultLocale.locale\n                }\n            });\n        }\n        window.addEventListener('scroll', debounce(this.handleScroll));\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        const { currentLocale } = this.state;\n        if (nextState.currentLocale.locale !== currentLocale.locale) {\n            this.loadLocaleData({\n                intl: {\n                    locale: nextState.currentLocale.locale,\n                    defaultLocale: this.defaultLocale.locale\n                }\n            });\n        }\n    }\n\n    handleScroll = e => {\n        const triggerElement = document.getElementById('to-top-trigger');\n        if (triggerElement) {\n            const triggerHeight = triggerElement.offsetTop - (window.innerHeight + 50);\n            this.safeSetState({ showToTopButton: window.scrollY > triggerHeight });\n        } else {\n            this.safeSetState({ showToTopButton: false });\n        }\n    }\n\n    scrollToTop = () => {\n        const ele = document.getElementById('root');\n        ele.scrollIntoView({ behavior: 'smooth' });\n        setTimeout(() => this.safeSetState({ showToTopButton: false}), 300);\n    }\n\n    render() {\n        const { currentLocale, intlData, showToTopButton } = this.state;\n\n        if (!intlData) {\n            return null;\n        }\n\n        return (\n            <MuiThemeProvider theme={theme}>\n                <IntlProvider locale={currentLocale.locale} messages={intlData.static}>\n                    <React.Fragment>\n                        <CssBaseline />\n                        <Router>\n                            <React.Fragment>\n                                <GoogleAnalytics />\n                                <Navbar locale={localeConfig} setLocale={this.setLocale} />\n                                <Switch>\n                                    <ScrollToRoute exact path=\"/\" component={Home} />\n                                    <ScrollToRoute path=\"/about\" component={About} />\n                                    <ScrollToRoute path=\"/agora\" component={Whitepaper} />                                    \n                                    <ScrollToRoute\n                                        exact\n                                        path=\"/404\"\n                                        status={404}\n                                        component={NotFound}\n                                    />\n                                    <Redirect to=\"/404\" />\n                                </Switch>\n                                <Footer />\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={'to-top-button' + (showToTopButton ? ' active' : '')}\n                                    onClick={this.scrollToTop}\n                                >\n                                    <ArrowUpward />\n                                </Button>\n                            </React.Fragment>\n                        </Router>\n                    </React.Fragment>\n                </IntlProvider>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}